{
  "name": "Selector Agent",
  "description": "LangGraph-based MCP agent for Selector AI and other MCPs.",
  "version": "1.0",
  "url": "https://35a5-12-222-71-242.ngrok-free.app",
  "endpoint": "https://35a5-12-222-71-242.ngrok-free.app",
  "methods": {
    "send": "https://35a5-12-222-71-242.ngrok-free.app/"
  },
  "capabilities": {
    "a2a": true,
    "tool-use": true,
    "chat": true
  },
  "skills": [
    {
      "id": "ask_selector",
      "name": "ask_selector",
      "description": "Use this primary tool to ask general questions or give instructions to the Selector AI Assistant in natural language (e.g., 'show me device health', 'what are the top alerts?', 'summarize network status'). It interacts with the Selector Chat/Copilot API to understand intent, provide insights, or potentially execute actions. This is the default tool for most user requests unless they explicitly ask for specific raw query data or a list of phrases.",
      "parameters": {
        "properties": {
          "content": {
            "title": "Content",
            "type": "string"
          }
        },
        "required": [
          "content"
        ],
        "title": "selector_mcp_ask_selector_Input",
        "type": "object"
      }
    },
    {
      "id": "query_selector",
      "name": "query_selector",
      "description": "Executes a specific, pre-defined Selector query command string (usually starting with '#') directly against the Selector Query API to retrieve structured, raw data. Use ONLY when the user provides an exact query command string. Do NOT use for general questions.",
      "parameters": {
        "properties": {
          "command": {
            "title": "Command",
            "type": "string"
          }
        },
        "required": [
          "command"
        ],
        "title": "selector_mcp_query_selector_Input",
        "type": "object"
      }
    },
    {
      "id": "get_selector_phrases",
      "name": "get_selector_phrases",
      "description": "Retrieves the list of saved Natural Language Phrases (aliases/shortcuts) registered in the Selector system. Use ONLY when the user explicitly asks to 'list phrases', 'show aliases', 'get commands', or similar requests for the list itself. Do NOT use this to execute a phrase or ask a general question.",
      "parameters": {
        "properties": {
          "source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Source"
          }
        },
        "title": "selector_mcp_get_selector_phrases_Input",
        "type": "object"
      }
    },
    {
      "id": "create_or_update_file",
      "name": "create_or_update_file",
      "description": "Create or update a single file in a GitHub repository"
    },
    {
      "id": "search_repositories",
      "name": "search_repositories",
      "description": "Search for GitHub repositories"
    },
    {
      "id": "create_repository",
      "name": "create_repository",
      "description": "Create a new GitHub repository in your account"
    },
    {
      "id": "get_file_contents",
      "name": "get_file_contents",
      "description": "Get the contents of a file or directory from a GitHub repository"
    },
    {
      "id": "push_files",
      "name": "push_files",
      "description": "Push multiple files to a GitHub repository in a single commit"
    },
    {
      "id": "create_issue",
      "name": "create_issue",
      "description": "Create a new issue in a GitHub repository"
    },
    {
      "id": "create_pull_request",
      "name": "create_pull_request",
      "description": "Create a new pull request in a GitHub repository"
    },
    {
      "id": "fork_repository",
      "name": "fork_repository",
      "description": "Fork a GitHub repository to your account or specified organization"
    },
    {
      "id": "create_branch",
      "name": "create_branch",
      "description": "Create a new branch in a GitHub repository"
    },
    {
      "id": "list_commits",
      "name": "list_commits",
      "description": "Get list of commits of a branch in a GitHub repository"
    },
    {
      "id": "list_issues",
      "name": "list_issues",
      "description": "List issues in a GitHub repository with filtering options"
    },
    {
      "id": "update_issue",
      "name": "update_issue",
      "description": "Update an existing issue in a GitHub repository"
    },
    {
      "id": "add_issue_comment",
      "name": "add_issue_comment",
      "description": "Add a comment to an existing issue"
    },
    {
      "id": "search_code",
      "name": "search_code",
      "description": "Search for code across GitHub repositories"
    },
    {
      "id": "search_issues",
      "name": "search_issues",
      "description": "Search for issues and pull requests across GitHub repositories"
    },
    {
      "id": "search_users",
      "name": "search_users",
      "description": "Search for users on GitHub"
    },
    {
      "id": "get_issue",
      "name": "get_issue",
      "description": "Get details of a specific issue in a GitHub repository."
    },
    {
      "id": "get_pull_request",
      "name": "get_pull_request",
      "description": "Get details of a specific pull request"
    },
    {
      "id": "list_pull_requests",
      "name": "list_pull_requests",
      "description": "List and filter repository pull requests"
    },
    {
      "id": "create_pull_request_review",
      "name": "create_pull_request_review",
      "description": "Create a review on a pull request"
    },
    {
      "id": "merge_pull_request",
      "name": "merge_pull_request",
      "description": "Merge a pull request"
    },
    {
      "id": "get_pull_request_files",
      "name": "get_pull_request_files",
      "description": "Get the list of files changed in a pull request"
    },
    {
      "id": "get_pull_request_status",
      "name": "get_pull_request_status",
      "description": "Get the combined status of all status checks for a pull request"
    },
    {
      "id": "update_pull_request_branch",
      "name": "update_pull_request_branch",
      "description": "Update a pull request branch with the latest changes from the base branch"
    },
    {
      "id": "get_pull_request_comments",
      "name": "get_pull_request_comments",
      "description": "Get the review comments on a pull request"
    },
    {
      "id": "get_pull_request_reviews",
      "name": "get_pull_request_reviews",
      "description": "Get the reviews on a pull request"
    },
    {
      "id": "maps_geocode",
      "name": "maps_geocode",
      "description": "Convert an address into geographic coordinates"
    },
    {
      "id": "maps_reverse_geocode",
      "name": "maps_reverse_geocode",
      "description": "Convert coordinates into an address"
    },
    {
      "id": "maps_elevation",
      "name": "maps_elevation",
      "description": "Get elevation data for locations on the earth"
    },
    {
      "id": "sequentialthinking",
      "name": "sequentialthinking",
      "description": "A detailed tool for dynamic and reflective problem-solving through thoughts.\nThis tool helps analyze problems through a flexible thinking process that can adapt and evolve.\nEach thought can build on, question, or revise previous insights as understanding deepens.\n\nWhen to use this tool:\n- Breaking down complex problems into steps\n- Planning and design with room for revision\n- Analysis that might need course correction\n- Problems where the full scope might not be clear initially\n- Problems that require a multi-step solution\n- Tasks that need to maintain context over multiple steps\n- Situations where irrelevant information needs to be filtered out\n\nKey features:\n- You can adjust total_thoughts up or down as you progress\n- You can question or revise previous thoughts\n- You can add more thoughts even after reaching what seemed like the end\n- You can express uncertainty and explore alternative approaches\n- Not every thought needs to build linearly - you can branch or backtrack\n- Generates a solution hypothesis\n- Verifies the hypothesis based on the Chain of Thought steps\n- Repeats the process until satisfied\n- Provides a correct answer\n\nParameters explained:\n- thought: Your current thinking step, which can include:\n* Regular analytical steps\n* Revisions of previous thoughts\n* Questions about previous decisions\n* Realizations about needing more analysis\n* Changes in approach\n* Hypothesis generation\n* Hypothesis verification\n- next_thought_needed: True if you need more thinking, even if at what seemed like the end\n- thought_number: Current number in sequence (can go beyond initial total if needed)\n- total_thoughts: Current estimate of thoughts needed (can be adjusted up/down)\n- is_revision: A boolean indicating if this thought revises previous thinking\n- revises_thought: If is_revision is true, which thought number is being reconsidered\n- branch_from_thought: If branching, which thought number is the branching point\n- branch_id: Identifier for the current branch (if any)\n- needs_more_thoughts: If reaching end but realizing more thoughts needed\n\nYou should:\n1. Start with an initial estimate of needed thoughts, but be ready to adjust\n2. Feel free to question or revise previous thoughts\n3. Don't hesitate to add more thoughts if needed, even at the \"end\"\n4. Express uncertainty when present\n5. Mark thoughts that revise previous thinking or branch into new paths\n6. Ignore information that is irrelevant to the current step\n7. Generate a solution hypothesis when appropriate\n8. Verify the hypothesis based on the Chain of Thought steps\n9. Repeat the process until satisfied with the solution\n10. Provide a single, ideally correct answer as the final output\n11. Only set next_thought_needed to false when truly done and a satisfactory answer is reached"
    },
    {
      "id": "slack_list_channels",
      "name": "slack_list_channels",
      "description": "List public channels in the workspace with pagination",
      "parameters": {
        "properties": {
          "limit": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Limit"
          },
          "cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Cursor"
          }
        },
        "title": "slack_mcp_slack_list_channels_Input",
        "type": "object"
      }
    },
    {
      "id": "slack_post_message",
      "name": "slack_post_message",
      "description": "Post a new message to a Slack channel",
      "parameters": {
        "properties": {
          "channel_id": {
            "title": "Channel Id",
            "type": "string"
          },
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "channel_id",
          "text"
        ],
        "title": "slack_mcp_slack_post_message_Input",
        "type": "object"
      }
    },
    {
      "id": "slack_reply_to_thread",
      "name": "slack_reply_to_thread",
      "description": "Reply to a specific message thread in Slack",
      "parameters": {
        "properties": {
          "channel_id": {
            "title": "Channel Id",
            "type": "string"
          },
          "thread_ts": {
            "title": "Thread Ts",
            "type": "string"
          },
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "channel_id",
          "thread_ts",
          "text"
        ],
        "title": "slack_mcp_slack_reply_to_thread_Input",
        "type": "object"
      }
    },
    {
      "id": "slack_add_reaction",
      "name": "slack_add_reaction",
      "description": "Add a reaction emoji to a message",
      "parameters": {
        "properties": {
          "channel_id": {
            "title": "Channel Id",
            "type": "string"
          },
          "timestamp": {
            "title": "Timestamp",
            "type": "string"
          },
          "reaction": {
            "title": "Reaction",
            "type": "string"
          }
        },
        "required": [
          "channel_id",
          "timestamp",
          "reaction"
        ],
        "title": "slack_mcp_slack_add_reaction_Input",
        "type": "object"
      }
    },
    {
      "id": "slack_get_channel_history",
      "name": "slack_get_channel_history",
      "description": "Get recent messages from a channel",
      "parameters": {
        "properties": {
          "channel_id": {
            "title": "Channel Id",
            "type": "string"
          },
          "limit": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Limit"
          }
        },
        "required": [
          "channel_id"
        ],
        "title": "slack_mcp_slack_get_channel_history_Input",
        "type": "object"
      }
    },
    {
      "id": "slack_get_thread_replies",
      "name": "slack_get_thread_replies",
      "description": "Get all replies in a message thread",
      "parameters": {
        "properties": {
          "channel_id": {
            "title": "Channel Id",
            "type": "string"
          },
          "thread_ts": {
            "title": "Thread Ts",
            "type": "string"
          }
        },
        "required": [
          "channel_id",
          "thread_ts"
        ],
        "title": "slack_mcp_slack_get_thread_replies_Input",
        "type": "object"
      }
    },
    {
      "id": "slack_get_users",
      "name": "slack_get_users",
      "description": "Get a list of all users in the workspace with their basic profile information",
      "parameters": {
        "properties": {
          "cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Cursor"
          },
          "limit": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Limit"
          }
        },
        "title": "slack_mcp_slack_get_users_Input",
        "type": "object"
      }
    },
    {
      "id": "slack_get_user_profile",
      "name": "slack_get_user_profile",
      "description": "Get detailed profile information for a specific user",
      "parameters": {
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "string"
          }
        },
        "required": [
          "user_id"
        ],
        "title": "slack_mcp_slack_get_user_profile_Input",
        "type": "object"
      }
    },
    {
      "id": "create_drawing",
      "name": "create_drawing",
      "description": "Create a new Excalidraw drawing"
    },
    {
      "id": "get_drawing",
      "name": "get_drawing",
      "description": "Get an Excalidraw drawing by ID"
    },
    {
      "id": "update_drawing",
      "name": "update_drawing",
      "description": "Update an Excalidraw drawing by ID"
    },
    {
      "id": "delete_drawing",
      "name": "delete_drawing",
      "description": "Delete an Excalidraw drawing by ID"
    },
    {
      "id": "list_drawings",
      "name": "list_drawings",
      "description": "List all Excalidraw drawings"
    },
    {
      "id": "export_to_json",
      "name": "export_to_json",
      "description": "Export an Excalidraw drawing to JSON"
    },
    {
      "id": "read_file",
      "name": "read_file",
      "description": "Read the complete contents of a file from the file system. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Only works within allowed directories."
    },
    {
      "id": "read_multiple_files",
      "name": "read_multiple_files",
      "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories."
    },
    {
      "id": "write_file",
      "name": "write_file",
      "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories."
    },
    {
      "id": "edit_file",
      "name": "edit_file",
      "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories."
    },
    {
      "id": "create_directory",
      "name": "create_directory",
      "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories."
    },
    {
      "id": "list_directory",
      "name": "list_directory",
      "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories."
    },
    {
      "id": "move_file",
      "name": "move_file",
      "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories."
    },
    {
      "id": "search_files",
      "name": "search_files",
      "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories."
    },
    {
      "id": "get_objects",
      "name": "get_objects",
      "description": "Get objects from NetBox based on their type and filters.\n    Args:\n        netbox_client: An instance of AsyncNetBoxAPIClient.\n        object_type: String representing the NetBox object type (e.g., \"providers\", \"sites\", \"vlans\").\n        filters: dict of filters to apply to the API call.",
      "parameters": {
        "properties": {
          "object_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Object Type"
          },
          "filters": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Filters"
          }
        },
        "title": "netbox_mcp_get_objects_Input",
        "type": "object"
      }
    },
    {
      "id": "search_netbox",
      "name": "search_netbox",
      "description": "Perform a global search across NetBox objects.\n    Args:\n        netbox_client: An instance of AsyncNetBoxAPIClient.\n        query: Search string to look for.\n        limit: Maximum number of results to return.",
      "parameters": {
        "properties": {
          "query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Query"
          },
          "limit": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Limit"
          }
        },
        "title": "netbox_mcp_search_netbox_Input",
        "type": "object"
      }
    },
    {
      "id": "get_object_by_id",
      "name": "get_object_by_id",
      "description": "Get detailed information about a specific NetBox object by its ID.\n    Args:\n        netbox_client: An instance of AsyncNetBoxAPIClient.\n        object_type: String representing the NetBox object type.\n        object_id: The numeric ID of the object.",
      "parameters": {
        "properties": {
          "object_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Object Type"
          },
          "object_id": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Object Id"
          }
        },
        "title": "netbox_mcp_get_object_by_id_Input",
        "type": "object"
      }
    },
    {
      "id": "search",
      "name": "search",
      "description": "Search on Google for multiple keywords and return the results"
    },
    {
      "id": "get_servicenow_problem_sys_id",
      "name": "get_servicenow_problem_sys_id",
      "description": "Get the sys_id for a ServiceNow problem by its number",
      "parameters": {
        "properties": {
          "problem_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Problem Number"
          }
        },
        "title": "servicenow_mcp_get_servicenow_problem_sys_id_Input",
        "type": "object"
      }
    },
    {
      "id": "get_servicenow_problem_state",
      "name": "get_servicenow_problem_state",
      "description": "Get the current state of a ServiceNow problem",
      "parameters": {
        "properties": {
          "sys_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Sys Id"
          }
        },
        "title": "servicenow_mcp_get_servicenow_problem_state_Input",
        "type": "object"
      }
    },
    {
      "id": "get_servicenow_problem_details",
      "name": "get_servicenow_problem_details",
      "description": "Get detailed information for a ServiceNow problem",
      "parameters": {
        "properties": {
          "problem_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Problem Number"
          }
        },
        "title": "servicenow_mcp_get_servicenow_problem_details_Input",
        "type": "object"
      }
    },
    {
      "id": "create_servicenow_problem",
      "name": "create_servicenow_problem",
      "description": "Create a new ServiceNow problem",
      "parameters": {
        "properties": {
          "problem_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Problem Data"
          }
        },
        "title": "servicenow_mcp_create_servicenow_problem_Input",
        "type": "object"
      }
    },
    {
      "id": "update_servicenow_problem",
      "name": "update_servicenow_problem",
      "description": "Update a ServiceNow problem",
      "parameters": {
        "properties": {
          "sys_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Sys Id"
          },
          "update_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Update Data"
          }
        },
        "title": "servicenow_mcp_update_servicenow_problem_Input",
        "type": "object"
      }
    },
    {
      "id": "pyATS_run_show_command",
      "name": "pyATS_run_show_command",
      "description": "Executes a general Cisco IOS/NX-OS 'show' command (e.g., 'show ip interface brief', 'show version', 'show inventory') on a specified device to gather its current operational state or specific information. Returns parsed JSON output when available, otherwise returns raw text output. Use this for general device information gathering. Requires 'device_name' and the exact 'command' string.",
      "parameters": {
        "properties": {
          "device_name": {
            "title": "Device Name",
            "type": "string"
          },
          "command": {
            "title": "Command",
            "type": "string"
          }
        },
        "required": [
          "device_name",
          "command"
        ],
        "title": "pyats_mcp_pyATS_run_show_command_Input",
        "type": "object"
      }
    },
    {
      "id": "pyATS_configure_device",
      "name": "pyATS_configure_device",
      "description": "Applies configuration commands to a specified Cisco IOS/NX-OS device. Enters configuration mode and executes the provided commands to modify the device's settings. Use this for making changes to the device configuration. Requires 'device_name' and the 'config_commands' (can be multi-line).",
      "parameters": {
        "properties": {
          "device_name": {
            "title": "Device Name",
            "type": "string"
          },
          "config_commands": {
            "title": "Config Commands",
            "type": "string"
          }
        },
        "required": [
          "device_name",
          "config_commands"
        ],
        "title": "pyats_mcp_pyATS_configure_device_Input",
        "type": "object"
      }
    },
    {
      "id": "pyATS_show_running_config",
      "name": "pyATS_show_running_config",
      "description": "Retrieves the full running configuration from a Cisco IOS/NX-OS device using 'show running-config'. Returns raw text output as there is no parser available. Requires 'device_name'.",
      "parameters": {
        "properties": {
          "device_name": {
            "title": "Device Name",
            "type": "string"
          }
        },
        "required": [
          "device_name"
        ],
        "title": "pyats_mcp_pyATS_show_running_config_Input",
        "type": "object"
      }
    },
    {
      "id": "pyATS_show_logging",
      "name": "pyATS_show_logging",
      "description": "Retrieves recent system logs using 'show logging last 250' on a Cisco IOS/NX-OS device. Returns raw text output. Requires 'device_name'.",
      "parameters": {
        "properties": {
          "device_name": {
            "title": "Device Name",
            "type": "string"
          }
        },
        "required": [
          "device_name"
        ],
        "title": "pyats_mcp_pyATS_show_logging_Input",
        "type": "object"
      }
    },
    {
      "id": "pyATS_ping_from_network_device",
      "name": "pyATS_ping_from_network_device",
      "description": "Executes a 'ping' command on a specified Cisco IOS/NX-OS device to test network reachability to a target IP address or hostname (e.g., 'ping 8.8.8.8', 'ping vrf MGMT 10.0.0.1'). Returns parsed JSON output for standard pings when possible, otherwise raw text. Requires 'device_name' and the exact 'command' string.",
      "parameters": {
        "properties": {
          "device_name": {
            "title": "Device Name",
            "type": "string"
          },
          "command": {
            "title": "Command",
            "type": "string"
          }
        },
        "required": [
          "device_name",
          "command"
        ],
        "title": "pyats_mcp_pyATS_ping_from_network_device_Input",
        "type": "object"
      }
    },
    {
      "id": "pyATS_run_linux_command",
      "name": "pyATS_run_linux_command",
      "description": "Executes common Linux commands on a specified device (e.g., 'ifconfig', 'ps -ef', 'netstat -rn', including piping and redirection). Parsed output is returned when available, otherwise raw output.",
      "parameters": {
        "properties": {
          "device_name": {
            "title": "Device Name",
            "type": "string"
          },
          "command": {
            "title": "Command",
            "type": "string"
          }
        },
        "required": [
          "device_name",
          "command"
        ],
        "title": "pyats_mcp_pyATS_run_linux_command_Input",
        "type": "object"
      }
    },
    {
      "id": "send-email",
      "name": "send-email",
      "description": "\u53d1\u9001\u90ae\u4ef6"
    },
    {
      "id": "ask_chatgpt",
      "name": "ask_chatgpt",
      "description": "Sends the provided text ('content') to an external ChatGPT (gpt-4o) model for analysis, summarization, comparison, or generation tasks. Use this ONLY when specifically asked to get ChatGPT's perspective or perform complex analysis beyond the primary assistant's capabilities (e.g., detailed security review of a config, summarizing a large document). Use this tool to augment your own AI capabilities as access to another external Large Language Model.",
      "parameters": {
        "properties": {
          "content": {
            "title": "Content",
            "type": "string"
          }
        },
        "required": [
          "content"
        ],
        "title": "chatgpt_mcp_ask_chatgpt_Input",
        "type": "object"
      }
    },
    {
      "id": "generate_chart",
      "name": "generate_chart",
      "description": "Generate a chart using QuickChart"
    },
    {
      "id": "download_chart",
      "name": "download_chart",
      "description": "Download a chart image to a local file"
    },
    {
      "id": "vegalite_save_data",
      "name": "vegalite_save_data",
      "description": "Save tabular data for future Vega-Lite visualizations. The data must be a list of dictionaries with consistent keys and values that are strings, numbers, or floats. For example: [{\"direction\": \"Input\", \"packets\": 1000}, {\"direction\": \"Output\", \"packets\": 1200}].",
      "parameters": {
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "data": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "title": "Data",
            "type": "array"
          }
        },
        "required": [
          "name",
          "data"
        ],
        "title": "vegalite_mcp_vegalite_save_data_Input",
        "type": "object"
      }
    },
    {
      "id": "vegalite_visualize_data",
      "name": "vegalite_visualize_data",
      "description": "Generate a Vega-Lite visualization from a previously saved dataset. Takes a valid Vega-Lite v5 specification (as a string) and automatically injects the saved data into the chart. Saves the output as a PNG to /output.",
      "parameters": {
        "properties": {
          "data_name": {
            "title": "Data Name",
            "type": "string"
          },
          "vegalite_specification": {
            "title": "Vegalite Specification",
            "type": "string"
          }
        },
        "required": [
          "data_name",
          "vegalite_specification"
        ],
        "title": "vegalite_mcp_vegalite_visualize_data_Input",
        "type": "object"
      }
    },
    {
      "id": "generate_mermaid_markdown",
      "name": "generate_mermaid_markdown",
      "description": "Generate PNG image from mermaid markdown"
    },
    {
      "id": "get_rfc",
      "name": "get_rfc",
      "description": "Fetch an RFC document by its number"
    },
    {
      "id": "search_rfcs",
      "name": "search_rfcs",
      "description": "Search for RFCs by keyword"
    },
    {
      "id": "get_rfc_section",
      "name": "get_rfc_section",
      "description": "Get a specific section from an RFC"
    },
    {
      "id": "get_cve",
      "name": "get_cve",
      "description": "Retrieves detailed information for a specific CVE ID from the NIST NVD.",
      "parameters": {
        "properties": {
          "cve_id": {
            "title": "Cve Id",
            "type": "string"
          },
          "concise": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Concise"
          }
        },
        "required": [
          "cve_id"
        ],
        "title": "nist_mcp_get_cve_Input",
        "type": "object"
      }
    },
    {
      "id": "search_cve",
      "name": "search_cve",
      "description": "Searches the NIST NVD for CVEs based on a keyword.",
      "parameters": {
        "properties": {
          "keyword": {
            "title": "Keyword",
            "type": "string"
          },
          "exact_match": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Exact Match"
          },
          "concise": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Concise"
          },
          "results": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Results"
          }
        },
        "required": [
          "keyword"
        ],
        "title": "nist_mcp_search_cve_Input",
        "type": "object"
      }
    }
  ]
}